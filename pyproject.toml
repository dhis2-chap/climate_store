[project]
name = "climate_store"
version = "0.0.13"
description = "Climate Store for CHAP"
readme = "README.md"
requires-python = ">=3.10"

authors = [{ name = "Sandvelab", email = "knutdrand@gmail.com" }]
license = { text = "MIT license" }
keywords = ["climate_store"]

[build-system]
requires = ["setuptools", "wheel"]
dependencies = [
    "annotated_types",
    "earthengine-api",
    "fastapi[standard]",
    "geopandas",
    "geopy",
    "numpy<2.0",
    "pandas",
    "pydantic",
    "pydantic-geojson<2",
    "pydantic>=2.0",
    "python-dotenv",
    "python-multipart",
    "pyyaml",
    "uvicorn",
    "virtualenv",
    "xarray",
    "orjson>=3.10.7",
]

dev-dependencies = [
    "build",
    "bump2version>=1.0.1",
    "coverage>=7.6.2",
    "earthengine-api>=1.1.3",
    "furo>=2024.8.6",
    "myst-parser>=4.0.0",
    "pre-commit>=4.0.1",
    "pytest<8",
    "pytest-cov>=5.0.0",
    "pytest-mock>=3.14.0",
    "ruff>=0.6.9",
    "sphinx>=8.1.0",
    "virtualenv",
    "wheel>=0.44.0",
    "typer~=0.9.0",
]
[project.scripts]
climate_store = "climate_store.cli:app"

[tool.ruff]
target-version = "py312"
# select = ["E", "F", "I"]
lint.fixable = ["ALL"]
# exclude = [".git", ".mypy_cache", ".ruff_cache"]
include = ["climate_store/**/*.py"]
line-length = 120

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
docstring-code-format = true
docstring-code-line-length = "dynamic"

[tool.pytest.ini_options]
log_cli = true



